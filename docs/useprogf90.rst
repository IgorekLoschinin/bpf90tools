Use tools f90
=============

This module discusses examples of using shell objects to run **BLUPF90** programs

**Import libs**::

    from bpf90tools import (
        Renumf90,
        AIremlf90,
        Remlf90,
        Blupf90
    )

Renumf90
^^^^^^^^

**Data processing and preparation using**::

    renum = Renumf90(
        app="renumf90",                 # for win renumf90.exe
        work_dir="./foldtest/test1",
        fn_par="param.txt"
    )
    renum.run()

The result of the renumf90 program execution is a set of files (more details in doc.):
``renadd04.ped``, ``renf90.fields``, ``renf90.dat``, ``renf90.inb``, ``renf90.par``, ``renf90.tables``.

.. note::
    ``renumf90_console_output.log`` is a file generated by the shell. It stores
    information about program execution, which is output to the console.

AIremlf90
^^^^^^^^^

**Using AIremlf90 to calculate variances**::

    aireml = AIremlf90(
        app="airemlf90",                # for win airemlf90.exe
        work_dir="./foldtest/test1",
        fn_par="renf90.par"
    )
    aireml.run()

The result of the program operation is saved to the file ``airemlf90.log``::

    AIREMLF90 ver. 1.149
     In round         36 convergence =  0.712257048487E-03
     delta convergence =  0.994040299577E-06
    -2logL =       0.24653657     : AIC =        4.2465366
    Genetic variance(s) for effect  4
      0.71609E-04
    Residual variance(s)
      0.41366
    inverse of AI matrix (Sampling Variance)
      0.13285E-05 -0.48971E-06
     -0.48971E-06  0.11398
    Correlations from inverse of AI matrix
       1.0000     -0.12585E-02
     -0.12585E-02   1.0000
    SE for G
      0.11526E-02
    SE for R
      0.33761

.. note::
    ``airemlf90_console_output.log`` is a file generated by the shell. It stores
    information about program execution, which is output to the console.

Remlf90
^^^^^^^

**Using of Remlf90 to calculate variants**::

    reml = Remlf90(
        app="remlf90",                      # for win airemlf90.exe
        work_dir="./foldtest/test1",
        fn_par="renf90.par"
    )
    reml.run()

The result of the program operation is saved to the file ``remlf90.log``::

    REMLF90 ver. 1.86
     Final Estimates
    Genetic variance(s) for effect  4
      0.9417E-04
    Residual variance(s)
      0.9420
     In round       4148 convergence =  0.996781495046E-10
    -2logL =        1.4856567       AIC =        5.4856567

.. note::
    ``remlf90_console_output.log`` is a file generated by the shell. It stores
    information about program execution, which is output to the console.


Blupf90
^^^^^^^

**Using Blupf90 to calculate breeding value estimates**::

    blup = Blupf90(
        app="blupf90",                  # for win blupf90.exe
        work_dir="./foldtest/test1",
        fn_par="renf90.par"
    )
    blup.run()

The result of the execution is stored in the ``solutions`` file::

    trait/effect level  solution          s.e.
       1   1         1         -0.21337720          0.47468396
       1   1         2          0.00000000          0.00000000
       1   2         1        -12.45754690         22.12147091
       1   2         2        -11.60488568         21.96909516
       1   2         3        -12.63970827         22.99779542
       1   2         4        -12.25754758         22.12147643
       1   3         1         22.05395473         21.91343740
       1   4         1          0.00005158          0.00897511
       1   4         2          0.00005618          0.00846196
       1   4         3         -0.00002650          0.00846193
       1   4         4          0.00004680          0.00846186
       1   4         5         -0.00002956          0.00846189
       1   4         6          0.00000149          0.00846216
       1   4         7          0.00003811          0.00897534
       1   4         8          0.00001997          0.00897535
       1   4         9          0.00000303          0.00872283
       1   4        10          0.00003390          0.00846213
       1   4        11          0.00001065          0.00846213
       1   4        12         -0.00002415          0.00846214
       1   4        13         -0.00000962          0.00846214
       1   4        14         -0.00002326          0.00846211
       1   4        15          0.00001248          0.00846213
